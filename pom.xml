<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">
  <modelVersion>4.0.0</modelVersion>
  <name>aron Maven</name>
  <parent>
    <groupId>nu.aron</groupId>
    <artifactId>maven-plugins</artifactId>
    <version>9</version>
    <relativePath/>
  </parent>
  <artifactId>aron-maven</artifactId>
  <version>3.6.2-0</version>
  <packaging>pom</packaging>
  <organization>
    <name>aron</name>
  </organization>
  <description>Repackaging of apache maven with a site specific
  settings.xml, toolchains.xml and bash-completion.</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.version>3.6.2</maven.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>apache-maven</artifactId>
      <version>${maven.version}</version>
      <classifier>bin</classifier>
      <type>tar.gz</type>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}-${maven.version}-${parsedVersion.buildNumber}.noarch.rpm</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>untar-maven</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>true</excludeTransitive>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.maven</groupId>
                  <artifactId>apache-maven</artifactId>
                  <classifier>bin</classifier>
                  <type>tar.gz</type>
                </artifactItem>
              </artifactItems>
              <excludes>
                **/settings.xml,**/toolchains.xml
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>copy-team-takari</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/apache-maven-${maven.version}/lib/ext</outputDirectory>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>true</excludeTransitive>
              <includeArtifactIds>takari-local-repository,takari-filemanager,takari-smart-builder</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testResources</id>
            <phase/>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>
          <execution>
            <id>default-resources</id>
            <phase/>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
          <execution>
            <id>copy-usrshare</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/apache-maven-${maven.version}/conf</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/</directory>
                  <includes>
                    <include>settings.xml</include>
                    <include>toolchains.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-root</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/root</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <includes>
                    <include>etc/bash_completion.d/maven</include>
                    <include>etc/profile.d/aron-maven.sh</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>2.2.0</version>
        <extensions>true</extensions>
        <configuration>
          <license>ASL 2.0</license>
          <distribution/>
          <group>aron</group>
          <packager>aron</packager>
          <name>aron-maven</name>
          <targetVendor>redhat</targetVendor>
          <projversion>${maven.version}</projversion>
          <repackJars>false</repackJars>
          <autoRequires>false</autoRequires>
          <requires>
            <require>java &gt;= 11</require>
          </requires>
          <obsoletes>maven &lt; 3.6</obsoletes>
          <defineStatements>
            <defineStatement>__check_files %{nil}</defineStatement>
            <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
            <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
            <defineStatement>__jar_repack 0</defineStatement>
            <defineStatement>_source_payload w0.gzdio</defineStatement>
            <defineStatement>_binary_payload w0.gzdio</defineStatement>
          </defineStatements>
        </configuration>
        <executions>
          <execution>
            <id>attach-rpm</id>
            <goals>
              <goal>attached-rpm</goal>
            </goals>
            <configuration>
              <release>${parsedVersion.buildNumber}</release>
              <mappings combine.self="override">
                <mapping>
                <directoryIncluded>false</directoryIncluded>
                  <directory>/usr/share/maven</directory>
                  <sources>
                    <source>
                      <location>${basedir}/target/classes/apache-maven-${maven.version}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>${basedir}/target/classes/root</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/usr/bin</directory>
                  <sources>
                    <softlinkSource>
                      <location>/usr/share/maven/bin/mvn</location>
                    </softlinkSource>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase/>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase/>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase/>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase/>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase/>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <issueManagement>
    <system>JIRA</system>
    <url/>
  </issueManagement>
  <ciManagement>
    <system>Hudson</system>
    <url/>
  </ciManagement>
    <scm>
    <connection>scm:git:git@github.com:andreasaronsson/aron-maven.git</connection>
    <developerConnection>scm:git:git@github.com:andreasaronsson/aron-maven.git</developerConnection>
    <url>https://github.com/andreasaronsson/aron-maven</url>
<tag>rel-3.6.2-0</tag>
  </scm>
</project>
